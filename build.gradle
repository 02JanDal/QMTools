if (!hasProperty('mainClass')) {
    ext.mainClass = 'org.multimc.qmtools.QMTools'
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.0'
    }
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

jacoco {
    toolVersion = "0.7.0.201403182114"
}

repositories {
    mavenCentral();
}

sourceCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

mainClassName = mainClass;
applicationName = 'QMTools';
group = 'org.multimc'
version = '0.1-SNAPSHOT'

sourceSets {
    main {
        java {
            exclude 'org/multimc/qmlib/**'
        }
    }
    qmlib {
        java {
            exclude 'org/multimc/qmtools/**'
        }
    }
}

coveralls.jacocoReportPath = "$buildDir/reports/jacoco/test/jacocoReport.xml"
coveralls.sourceDirs = files(project.sourceSets.main.allSource.srcDirs, project.sourceSets.qmlib.allSource.srcDirs).files.absolutePath

task jacocoReport(type: JacocoReport) {
    executionData test
    dependsOn test
    reports {
        html.enabled = true
        xml.enabled = true // coveralls plugin depends on xml format report
        xml.destination = coveralls.jacocoReportPath
    }
    sourceDirectories = files(project.sourceSets.main.allSource.srcDirs) + files(project.sourceSets.qmlib.allSource.srcDirs)
    classDirectories =  files(project.sourceSets.main.output) + files(project.sourceSets.qmlib.output)
}

test {
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpFile = file("$buildDir/jacoco/classpathdumps")
    }
}

task qmlibJar(type: Jar) {
    from sourceSets.qmlib.output
    version = project.version
    baseName = 'QMLib'
}

artifacts {
    archives jar
    archives qmlibJar
}

dependencies {
    qmlibCompile group: 'com.google.code.gson', name: 'gson', version: '2.3'
    qmlibCompile group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2'
    compile files("${libsDir}/QMLib-${version}.jar") {
        builtBy 'qmlibJar'
    }
    compile group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '4.7'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.3'
    compile group: 'org.graphstream', name: 'gs-core', version: '1.2'
    compile group: 'org.graphstream', name: 'gs-ui', version: '1.2'
    testCompile group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2'
    testCompile group: 'junit', name: 'junit', version: '4.3.1'
    testCompile files("${libsDir}/QMLib-${version}.jar") {
        builtBy 'qmlibJar'
    }
}

task wrapper(type: Wrapper, description: 'Creates and deploys the Gradle wrapper to the current directory.') {
    gradleVersion = '2.0' //Always try to use latest
}
